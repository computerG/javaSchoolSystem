/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schoolsystem;

import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author codeGeek
 */
public class AllocateDepartments extends javax.swing.JDialog {
    DatabaseConnect dbcon=null;
    Connection conn=null;
    PreparedStatement pst=null;
     private ResultSet rs; 
    private String update=null;
    private String hod;
   ListDepartment department;
    /*
     * Creates new form AllocateDepartments
     */
    public AllocateDepartments(JDialog frame,boolean modal) {
        super(frame,modal);
        try {
            ;
            initComponents();
            lbl_depart.setVisible(false);
            txt_department_name.setVisible(false);
            dbcon=new DatabaseConnect();
            conn=dbcon.dbConnect();          
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AllocateDepartments.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AllocateDepartments.class.getName()).log(Level.SEVERE, null, ex);
        } 
         populateDepartment();
        populateComboTscno();       
        combo_teacher_tscno.setEnabled(true);
        
        //combo_teacher_tscno.setSelectedIndex(1);
    }

   public AllocateDepartments(JDialog frame, boolean b, String update,String hod) {
       super(frame,b);
        try {
            this.update=update;
            this.hod=hod;
            initComponents();  
            combo_department_name.setVisible(false);
            lbl_department.setVisible(false);
            dbcon=new DatabaseConnect();
            conn=dbcon.dbConnect();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AllocateDepartments.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AllocateDepartments.class.getName()).log(Level.SEVERE, null, ex);
        }  
     
        populateComboTscno();
        combo_teacher_tscno.setEnabled(true);
        txt_department_name.setText(update);
        txt_department_name.setEditable(false);
        btn_save.setText("Update");
        
    }
  public void populateDepartment(){
      
    try {
            String allTeachers="select department_name from department";
            pst=conn.prepareStatement(allTeachers);
            rs=pst.executeQuery();           
             while(rs.next())  {
                 combo_department_name.addItem(rs.getString("department_name"));
             }              
              
        }
        catch (SQLException ex) { 
        Logger.getLogger(AllocateDepartments.class.getName()).log(Level.SEVERE, null, ex);
        }
  }
public void populateComboTscno(){
      combo_teacher_tscno.removeAllItems();
    try {
            String allTeachers="select tscNo from teacher";
            pst=conn.prepareStatement(allTeachers);
            rs=pst.executeQuery();           
             while(rs.next())  {
                 combo_teacher_tscno.addItem(rs.getString("tscNo"));
             }              
              
        }
        catch (SQLException ex) { 
          Logger.getLogger(AllocateDepartments.class.getName()).log(Level.SEVERE, null, ex);
        }
}
public void getTeacherName(String tscno){
     try {
       //  System.out.println(combo_teacher_tscno.getSelectedItem().toString());
            String allTeachers="select firstname,lastname ,surname from teacher where tscNo='"+tscno+"'";
            pst=conn.prepareStatement(allTeachers);
            rs=pst.executeQuery();           
             if(rs.next())  {
                String fname= rs.getString("firstname");
                String sname= rs.getString("surname");
                String lname= rs.getString("lastname");
                lbl_teacher_name.setText(sname+" "+fname+" "+lname);
             }              
              
        }
        catch (SQLException ex) {
            Logger.getLogger(TeacherList.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        lbl_depart = new javax.swing.JLabel();
        txt_department_name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btn_save = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lbl_teacher_name = new javax.swing.JLabel();
        chk_showname = new javax.swing.JCheckBox();
        combo_teacher_tscno = new javax.swing.JComboBox();
        combo_department_name = new javax.swing.JComboBox();
        lbl_department = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Department allocations");
        setResizable(false);

        lbl_depart.setText("Department Name");

        jLabel2.setText("Head of Deprtment");

        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_cancel.setText("Close");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        jLabel3.setText("Teacher name");

        chk_showname.setText("show name");
        chk_showname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chk_shownameItemStateChanged(evt);
            }
        });

        combo_teacher_tscno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lbl_department.setText("Department Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_depart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_department_name, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn_save)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_cancel))
                                    .addComponent(lbl_teacher_name, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chk_showname)
                                .addGap(96, 109, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(combo_teacher_tscno, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_department)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(combo_department_name, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_depart)
                    .addComponent(txt_department_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_department_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_department))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(combo_teacher_tscno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_teacher_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(chk_showname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_save)
                    .addComponent(btn_cancel))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
     String id=getdepartmentid();
        if(update!=null){
             if(txt_department_name.isVisible()&&txt_department_name.getText().isEmpty()){
          JOptionPane.showMessageDialog(null, "The Field cannot be empty!","Empty Fields",JOptionPane.WARNING_MESSAGE);}
             else{
        try {
            
              String updateDepartment="update department set department_name=?,headofdepartment=? where department_id=?";
              pst=conn.prepareStatement(updateDepartment);
              pst.setString(1, txt_department_name.getText().toString());
              pst.setString(2, combo_teacher_tscno.getSelectedItem().toString());           
               pst.setString(3, id);              
              if(pst.executeUpdate()>0)              {
                  JOptionPane.showMessageDialog(null, "Department updated successfully");                              
                  
              }else{
                  JOptionPane.showMessageDialog(null, "Department not updated");
              }
          } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Teacher allocated deprtment");              
          }
             }
    }     
      else{
          try {
              String insertDepartment="update department set headofdepartment=? where department_name=?";
              pst=conn.prepareStatement(insertDepartment);
              pst.setString(2, combo_department_name.getSelectedItem().toString());
              pst.setString(1, combo_teacher_tscno.getSelectedItem().toString());
              if(pst.executeUpdate()>0)
              {
                  JOptionPane.showMessageDialog(null, "Department Inserted successfully");
              }else{
                  JOptionPane.showMessageDialog(null, "Department not inserted");
              }
          } catch (SQLException ex) {
              JOptionPane.showMessageDialog(null , "Duplicate Entry! One Teacher cannot handle two department");
              
          }
      }
   
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
   WindowEvent event=new WindowEvent(AllocateDepartments.this, WindowEvent.WINDOW_CLOSING);
   Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(event);
   
   
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void chk_shownameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chk_shownameItemStateChanged
       if(evt.getStateChange()==evt.SELECTED){
           getTeacherName(combo_teacher_tscno.getSelectedItem().toString());
           combo_teacher_tscno.addItemListener(new ItemListener() {

               @Override
               public void itemStateChanged(ItemEvent e) {
                   if(chk_showname.isSelected()){
                     getTeacherName(combo_teacher_tscno.getSelectedItem().toString()); 
                 //To change body of generated methods, choose Tools | Templates.
               }
                   else{
                       lbl_teacher_name.setText("");
                   }
               }
              
           });}
        if(evt.getStateChange()==evt.DESELECTED){
            lbl_teacher_name.setText("");
           combo_teacher_tscno.addItemListener(new ItemListener() {

               @Override
               public void itemStateChanged(ItemEvent e) {
                     getTeacherName(combo_teacher_tscno.getSelectedItem().toString()); 
                 //To change body of generated methods, choose Tools | Templates.
               }
           });
        
     }
        
    }//GEN-LAST:event_chk_shownameItemStateChanged

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_save;
    private javax.swing.JCheckBox chk_showname;
    private javax.swing.JComboBox combo_department_name;
    private javax.swing.JComboBox combo_teacher_tscno;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbl_depart;
    private javax.swing.JLabel lbl_department;
    private javax.swing.JLabel lbl_teacher_name;
    private javax.swing.JTextField txt_department_name;
    // End of variables declaration//GEN-END:variables

    private String getdepartmentid() {
       // System.out.println(hod);
      try {
            String allTeachers="select department_id from department where headofdepartment='"+hod+"'";
            pst=conn.prepareStatement(allTeachers);
           
            rs=pst.executeQuery();           
             if(rs.next())  {
                // System.out.println(rs.getString("department_id"));
                 return rs.getString("department_id");
             }
             else{
                 return null;
             }
              
        }
        catch (SQLException ex) { 
       Logger.getLogger(TeacherList.class.getName()).log(Level.SEVERE, null, ex);
       return  null;
        } //To change body of generated methods, choose Tools | Templates.
    }
}
